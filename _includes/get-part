{% comment %}
gets a part seperated by its tag
example:
content: 
    <summary>
        Hello Summary
    </summary>
    <details>
        Hello Details
    </details>

part to find = summary

will return = Hello Summary


usage:
    {% include get-part content='<summary>...' part='summary' %}
    {{getPart}}

returns:
    part content or nil if nothing was found

dependencies:
    index-of

{% endcomment %}


{% assign getPart = nil %}
{% assign _getPart__startTag = include.part | downcase | prepend: '<' | append: '>' %}
{% assign _getPart__endTag = include.part | downcase | prepend: '</' | append: '>' %}
{% assign _getPart__startTagLen = _getPart__startTag | size %}

{% include index-of str=include.content search=_getPart__startTag case=false %}
{% if indexOf >= 0 %}
    {% assign indexOf = indexOf | plus: _getPart__startTagLen %}
    {% assign _getPart__strlen = include.content | size | minus: indexOf %}
    {% assign _getPart__str = include.content | slice: indexOf, _getPart__strlen %}
    {% include index-of str=_getPart__str search=_getPart__endTag case=false %}
    {% if indexOf >= 0 %}
        {% assign getPart = _getPart__str | slice: 0, indexOf %}
    {% else %}
        {% assign getPart = _getPart__str %}
    {% endif %}
{% endif %}